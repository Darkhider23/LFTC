%{
#include "y.tab.h"
%}

%option noyywrap
%option caseless

LITERA		[A-Za-z_]
CIFRA		[0-9A-Fa-f]
CIFRA_ZEC	[0-9]
IDENTIFICATOR	{LITERA}({LITERA}|{CIFRA_ZEC})*
NR_BAZA10	{CIFRA_ZEC}+
NR_REAL		{NR_BAZA10}"."{NR_BAZA10}?
DELIMIT_1	[;.,:]
OPERATOR_1	[+*/()<>=]|"-"|"["|"]"
STRING		\".*\"

%%

[ \t\n]


return		{return RETURN;}
int		{return INT;}
while		{return WHILE;}
else		{return ELSE;}
for		{return FOR;}
void		{return VOID;}
end		{return END;}
class		{return CLASS;}
if		{return IF;}
read		{return READ;}
include		{return INCLUDE;}
iostream	{return IOSTREAM;}
using		{return USING;}
namespace	{return NAMESPACE;}
std		{return STD;}
main		{return MAIN;}
cout		{return COUT;}
program		{return PROGRAM;}

"<="		{return LE;}
">="		{return GE;}
">"		{return GT;}
"=="		{return EQ;}
"<>"		{return NE;}
"="		{return ATRIB;}
"<"		{return LT;}
div		{return DIV;}
mod		{return MOD;}
or		{return OR;}
and		{return AND;}
not		{return NOT;}
")"		{return PARA_C;}
"("		{return PARA_O;}
"{"		{return BARA_O;}
"}"		{return BARA_C;}
"["		{return ARRAY_O;}
"]"		{return ARRAY_C;}

{IDENTIFICATOR}	{return ID;}
{NR_BAZA10}	{
	yylval.p_val = yytext;
	return CONST_INT;
		}
{NR_REAL}	{
	yylval.p_val = yytext;
	return CONST_REAL;
		}
{STRING}	{return STRING;}

{DELIMIT_1}	{return yytext[0];}
{OPERATOR_1}	{return yytext[0];}
.		{ printf("!!!%s!!!\n", yytext);}

%%

